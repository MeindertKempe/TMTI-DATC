cmake_minimum_required(VERSION 3.20)
project(mk_eso)

set(CMAKE_C_STANDARD 99)
set(CMAKE_C_EXTENSIONS OFF)
set(CMAKE_C_STANDARD_REQUIRED ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

option(ASAN "enable asan/ubsan")

if (CMAKE_CXX_COMPILER_ID MATCHES "Clang|GNU")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Wpedantic -Wvla")
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Og")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic -Wvla -Wno-missing-field-initializers")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Og")
	if (ASAN)
		set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -fsanitize=address -fsanitize=undefined")
		set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address -fsanitize=undefined")
	endif()
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4")
endif()

add_executable(les1_1 les1/les1_1.cpp)
add_executable(les1_2 les1/les1_2.cpp)
add_executable(les1_3 les1/les1_3.cpp)
add_executable(les1_4 les1/les1_4.cpp)

add_executable(les2_1 les2/les2_1/main.cpp les2/les2_1/StopWatch.cpp)
add_executable(les2_3 les2/les2_3.cpp)
add_executable(les2_4 les2/les2_4.cpp)
add_executable(les2_5 les2/les2_5.cpp)
